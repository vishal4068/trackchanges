import docx
from docx.oxml.ns import qn
from docx.oxml import OxmlElement
from collections import defaultdict

def has_tracked_changes(paragraph):
    # Check for any revisions in the paragraph
    for run in paragraph.runs:
        if run._element.xpath('.//w:ins') or run._element.xpath('.//w:del'):
            return True
    return False

def detect_tracked_changes(doc_path):
    doc = docx.Document(doc_path)
    changes_by_page = defaultdict(list)

    current_page = 1
    for paragraph in doc.paragraphs:
        if has_tracked_changes(paragraph):
            changes_by_page[current_page].append(paragraph.text)

        # Heuristic for page breaks, assuming explicit page breaks
        if 'Page Break' in paragraph.text:  # Note: This is a simplification
            current_page += 1

    return changes_by_page

# Example usage
doc_path = 'path_to_your_document.docx'
changes = detect_tracked_changes(doc_path)

# Output the results
for page, changes in changes.items():
    print(f"Page {page} has changes:")
    for change in changes:
        print(change)
