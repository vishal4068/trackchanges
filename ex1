from docx import Document
from PyPDF2 import PdfWriter
import xml.etree.ElementTree as ET

def extract_pages_with_changes(docx_file):
    document = Document(docx_file)
    xml_content = document._element.xml
    root = ET.fromstring(xml_content)
    pages_with_changes = []

    in_track_changes = False
    for i, paragraph in enumerate(root.iter("{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p")):
        for run in paragraph.iter("{http://schemas.openxmlformats.org/wordprocessingml/2006/main}r"):
            if run.find("{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ins") is not None or run.find("{http://schemas.openxmlformats.org/wordprocessingml/2006/main}del") is not None:
                in_track_changes = True
                break
        else:
            if in_track_changes:
                pages_with_changes.append(i + 1)
                in_track_changes = False

    return pages_with_changes

def extract_pages_to_pdf(docx_file, output_prefix):
    pages_with_changes = extract_pages_with_changes(docx_file)

    document = Document(docx_file)
    pdf_writer = PdfWriter()

    for page_num in pages_with_changes:
        extracted_doc = Document()
        for i, paragraph in enumerate(document.paragraphs):
            if i == page_num - 1:
                extracted_doc.add_paragraph(paragraph.text)

        output_pdf = f"{output_prefix}_page_{page_num}.pdf"
        extracted_doc.save(output_pdf)
        pdf_writer.add_pages(open(output_pdf, 'rb'))

    with open(f"{output_prefix}_with_changes.pdf", 'wb') as output:
        pdf_writer.write(output)

docx_file = "your_docx_file.docx"
output_prefix = "output_with_changes"

extract_pages_to_pdf(docx_file, output_prefix)
