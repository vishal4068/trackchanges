from docx import Document
from PyPDF2 import PdfWriter
import xml.etree.ElementTree as ET

def extract_pages_with_changes(docx_file):
    document = Document(docx_file)
    xml_content = document._element.xml
    root = ET.fromstring(xml_content)
    pages_with_changes = []

    for i, paragraph in enumerate(root.iter("{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p")):
        for run in paragraph.iter("{http://schemas.openxmlformats.org/wordprocessingml/2006/main}r"):
            if run.find("{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ins") is not None or run.find("{http://schemas.openxmlformats.org/wordprocessingml/2006/main}del") is not None:
                pages_with_changes.append(i + 1)
                break

    return pages_with_changes

def extract_pages(docx_file, output_prefix):
    pages_with_changes = extract_pages_with_changes(docx_file)

    document = Document(docx_file)
    for page_num in pages_with_changes:
        extracted_doc = Document()
        for i, paragraph in enumerate(document.paragraphs):
            if i == page_num - 1:
                extracted_doc.add_paragraph(paragraph.text)

        output_file = f"{output_prefix}_page_{page_num}.docx"
        extracted_doc.save(output_file)
        convert_to_pdf(output_file)

def convert_to_pdf(docx_file):
    pdf_writer = PdfWriter()
    output_pdf = docx_file.replace('.docx', '.pdf')
    pdf_writer.add_pages(open(docx_file, 'rb'))
    with open(output_pdf, 'wb') as output:
        pdf_writer.write(output)

docx_file = "your_docx_file.docx"
output_prefix = "output_with_changes"

extract_pages(docx_file, output_prefix)
